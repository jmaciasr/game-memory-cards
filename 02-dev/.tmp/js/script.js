'use strict';

var cards = document.getElementById('cards');
var deck = ['c1-mobile.png', 'c2-mobile.png', 'c3-mobile.png', 'c4-mobile.png', 'c5-mobile.png', 'c6-mobile.png', 'c7-mobile.png', 'c8-mobile.png', 'c9-mobile.png', 'c10-mobile.png'];
var fulldeck = void 0;
var randomDeck = void 0;
var card = void 0;
var backCard = void 0;

function doubleDeck() {
  fulldeck = deck.concat(deck);
  return fulldeck;
}

doubleDeck();

function stirDeck() {
  randomDeck = fulldeck.sort(function () {
    return 0.5 - Math.random();
  });
  return randomDeck;
}

stirDeck();

function printCards() {
  for (var i = 0; i < randomDeck.length; i++) {
    backCard = document.createElement('div');
    backCard.classList.add('back-card');
    card = document.createElement('img');
    card.src = 'img/' + randomDeck[i];
    card.classList.add('card');
    backCard.appendChild(card);
    cards.appendChild(backCard);
  }
}

printCards();

function hiddenCards() {
  var hiddenCards = document.getElementsByClassName('card');
  for (var i = 0; i < hiddenCards.length; i++) {
    hiddenCards[i].classList.add('card--hidden');
    hiddenCards[i].setAttribute('id', 'card' + i);
    hiddenCards[i].dataset.clicked = false;
  }
}

window.setTimeout(hiddenCards, 1000);

var clickedCards = 0;
var previus = void 0;
var current = void 0;
var score = 0;
function showCard(element) {
  if (clickedCards === 2) {
    return true;
  }
  var currentEle = element.target;
  var currentCard = currentEle.childNodes;
  if (currentEle.getAttribute('data-clicked')) {
    alert('you need other card');
  }
  if (currentCard[0] !== undefined) {
    currentCard[0].classList.remove('card--hidden');
    currentCard[0].dataset.clicked = true;
    clickedCards++;
    previus = current;
    current = currentCard[0].src;
  }
  if (previus === current) {
    score = +100;
    console.log(score);
  } else if (previus !== current && clickedCards === 2) {
    window.setTimeout(hiddenCards, 1000);
    clickedCards = 0;
  }
}

document.addEventListener('click', showCard);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbWUuanMiXSwibmFtZXMiOlsiY2FyZHMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZGVjayIsImZ1bGxkZWNrIiwicmFuZG9tRGVjayIsImNhcmQiLCJiYWNrQ2FyZCIsImRvdWJsZURlY2siLCJjb25jYXQiLCJzdGlyRGVjayIsInNvcnQiLCJNYXRoIiwicmFuZG9tIiwicHJpbnRDYXJkcyIsImkiLCJsZW5ndGgiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwic3JjIiwiYXBwZW5kQ2hpbGQiLCJoaWRkZW5DYXJkcyIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJzZXRBdHRyaWJ1dGUiLCJkYXRhc2V0IiwiY2xpY2tlZCIsIndpbmRvdyIsInNldFRpbWVvdXQiLCJjbGlja2VkQ2FyZHMiLCJwcmV2aXVzIiwiY3VycmVudCIsInNjb3JlIiwic2hvd0NhcmQiLCJlbGVtZW50IiwiY3VycmVudEVsZSIsInRhcmdldCIsImN1cnJlbnRDYXJkIiwiY2hpbGROb2RlcyIsImdldEF0dHJpYnV0ZSIsImFsZXJ0IiwidW5kZWZpbmVkIiwicmVtb3ZlIiwiY29uc29sZSIsImxvZyIsImFkZEV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsUUFBUUMsU0FBU0MsY0FBVCxDQUF3QixPQUF4QixDQUFaO0FBQ0EsSUFBSUMsT0FBTyxDQUFDLGVBQUQsRUFBa0IsZUFBbEIsRUFBbUMsZUFBbkMsRUFBb0QsZUFBcEQsRUFBcUUsZUFBckUsRUFBc0YsZUFBdEYsRUFBdUcsZUFBdkcsRUFBd0gsZUFBeEgsRUFBeUksZUFBekksRUFBMEosZ0JBQTFKLENBQVg7QUFDQSxJQUFJQyxpQkFBSjtBQUNBLElBQUlDLG1CQUFKO0FBQ0EsSUFBSUMsYUFBSjtBQUNBLElBQUlDLGlCQUFKOztBQUVBLFNBQVNDLFVBQVQsR0FBdUI7QUFDckJKLGFBQVdELEtBQUtNLE1BQUwsQ0FBWU4sSUFBWixDQUFYO0FBQ0EsU0FBT0MsUUFBUDtBQUNEOztBQUVESTs7QUFFQSxTQUFTRSxRQUFULEdBQXFCO0FBQ25CTCxlQUFhRCxTQUFTTyxJQUFULENBQWMsWUFBWTtBQUFFLFdBQU8sTUFBTUMsS0FBS0MsTUFBTCxFQUFiO0FBQTRCLEdBQXhELENBQWI7QUFDQSxTQUFPUixVQUFQO0FBQ0Q7O0FBRURLOztBQUVBLFNBQVNJLFVBQVQsR0FBdUI7QUFDckIsT0FBSyxJQUFJQyxJQUFJLENBQWIsRUFBZ0JBLElBQUlWLFdBQVdXLE1BQS9CLEVBQXVDRCxHQUF2QyxFQUE0QztBQUMxQ1IsZUFBV04sU0FBU2dCLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBWDtBQUNBVixhQUFTVyxTQUFULENBQW1CQyxHQUFuQixDQUF1QixXQUF2QjtBQUNBYixXQUFPTCxTQUFTZ0IsYUFBVCxDQUF1QixLQUF2QixDQUFQO0FBQ0FYLFNBQUtjLEdBQUwsR0FBVyxTQUFTZixXQUFXVSxDQUFYLENBQXBCO0FBQ0FULFNBQUtZLFNBQUwsQ0FBZUMsR0FBZixDQUFtQixNQUFuQjtBQUNBWixhQUFTYyxXQUFULENBQXFCZixJQUFyQjtBQUNBTixVQUFNcUIsV0FBTixDQUFrQmQsUUFBbEI7QUFDRDtBQUNGOztBQUVETzs7QUFFQSxTQUFTUSxXQUFULEdBQXdCO0FBQ3RCLE1BQUlBLGNBQWNyQixTQUFTc0Isc0JBQVQsQ0FBZ0MsTUFBaEMsQ0FBbEI7QUFDQSxPQUFLLElBQUlSLElBQUksQ0FBYixFQUFnQkEsSUFBSU8sWUFBWU4sTUFBaEMsRUFBd0NELEdBQXhDLEVBQTZDO0FBQzNDTyxnQkFBWVAsQ0FBWixFQUFlRyxTQUFmLENBQXlCQyxHQUF6QixDQUE2QixjQUE3QjtBQUNBRyxnQkFBWVAsQ0FBWixFQUFlUyxZQUFmLENBQTRCLElBQTVCLEVBQWtDLFNBQVNULENBQTNDO0FBQ0FPLGdCQUFZUCxDQUFaLEVBQWVVLE9BQWYsQ0FBdUJDLE9BQXZCLEdBQWlDLEtBQWpDO0FBQ0Q7QUFDRjs7QUFFREMsT0FBT0MsVUFBUCxDQUFrQk4sV0FBbEIsRUFBK0IsSUFBL0I7O0FBRUEsSUFBSU8sZUFBZSxDQUFuQjtBQUNBLElBQUlDLGdCQUFKO0FBQ0EsSUFBSUMsZ0JBQUo7QUFDQSxJQUFJQyxRQUFRLENBQVo7QUFDQSxTQUFTQyxRQUFULENBQW1CQyxPQUFuQixFQUE0QjtBQUMxQixNQUFJTCxpQkFBaUIsQ0FBckIsRUFBd0I7QUFDdEIsV0FBTyxJQUFQO0FBQ0Q7QUFDRCxNQUFJTSxhQUFhRCxRQUFRRSxNQUF6QjtBQUNBLE1BQUlDLGNBQWNGLFdBQVdHLFVBQTdCO0FBQ0EsTUFBSUgsV0FBV0ksWUFBWCxDQUF3QixjQUF4QixDQUFKLEVBQTZDO0FBQzNDQyxVQUFNLHFCQUFOO0FBQ0Q7QUFDRCxNQUFJSCxZQUFZLENBQVosTUFBbUJJLFNBQXZCLEVBQWtDO0FBQ2hDSixnQkFBWSxDQUFaLEVBQWVuQixTQUFmLENBQXlCd0IsTUFBekIsQ0FBZ0MsY0FBaEM7QUFDQUwsZ0JBQVksQ0FBWixFQUFlWixPQUFmLENBQXVCQyxPQUF2QixHQUFpQyxJQUFqQztBQUNBRztBQUNBQyxjQUFVQyxPQUFWO0FBQ0FBLGNBQVVNLFlBQVksQ0FBWixFQUFlakIsR0FBekI7QUFDRDtBQUNELE1BQUlVLFlBQVlDLE9BQWhCLEVBQXlCO0FBQ3ZCQyxZQUFPLENBQUUsR0FBVDtBQUNBVyxZQUFRQyxHQUFSLENBQVlaLEtBQVo7QUFDRCxHQUhELE1BR08sSUFBSUYsWUFBWUMsT0FBWixJQUF1QkYsaUJBQWlCLENBQTVDLEVBQStDO0FBQ3BERixXQUFPQyxVQUFQLENBQWtCTixXQUFsQixFQUErQixJQUEvQjtBQUNBTyxtQkFBZSxDQUFmO0FBQ0Q7QUFDRjs7QUFFRDVCLFNBQVM0QyxnQkFBVCxDQUEwQixPQUExQixFQUFtQ1osUUFBbkMiLCJmaWxlIjoic2NyaXB0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGNhcmRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhcmRzJylcclxubGV0IGRlY2sgPSBbJ2MxLW1vYmlsZS5wbmcnLCAnYzItbW9iaWxlLnBuZycsICdjMy1tb2JpbGUucG5nJywgJ2M0LW1vYmlsZS5wbmcnLCAnYzUtbW9iaWxlLnBuZycsICdjNi1tb2JpbGUucG5nJywgJ2M3LW1vYmlsZS5wbmcnLCAnYzgtbW9iaWxlLnBuZycsICdjOS1tb2JpbGUucG5nJywgJ2MxMC1tb2JpbGUucG5nJ11cclxubGV0IGZ1bGxkZWNrXHJcbmxldCByYW5kb21EZWNrXHJcbmxldCBjYXJkXHJcbmxldCBiYWNrQ2FyZFxyXG5cclxuZnVuY3Rpb24gZG91YmxlRGVjayAoKSB7XHJcbiAgZnVsbGRlY2sgPSBkZWNrLmNvbmNhdChkZWNrKVxyXG4gIHJldHVybiBmdWxsZGVja1xyXG59XHJcblxyXG5kb3VibGVEZWNrKClcclxuXHJcbmZ1bmN0aW9uIHN0aXJEZWNrICgpIHtcclxuICByYW5kb21EZWNrID0gZnVsbGRlY2suc29ydChmdW5jdGlvbiAoKSB7IHJldHVybiAwLjUgLSBNYXRoLnJhbmRvbSgpIH0pXHJcbiAgcmV0dXJuIHJhbmRvbURlY2tcclxufVxyXG5cclxuc3RpckRlY2soKVxyXG5cclxuZnVuY3Rpb24gcHJpbnRDYXJkcyAoKSB7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByYW5kb21EZWNrLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBiYWNrQ2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcbiAgICBiYWNrQ2FyZC5jbGFzc0xpc3QuYWRkKCdiYWNrLWNhcmQnKVxyXG4gICAgY2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpXHJcbiAgICBjYXJkLnNyYyA9ICdpbWcvJyArIHJhbmRvbURlY2tbaV1cclxuICAgIGNhcmQuY2xhc3NMaXN0LmFkZCgnY2FyZCcpXHJcbiAgICBiYWNrQ2FyZC5hcHBlbmRDaGlsZChjYXJkKVxyXG4gICAgY2FyZHMuYXBwZW5kQ2hpbGQoYmFja0NhcmQpXHJcbiAgfVxyXG59XHJcblxyXG5wcmludENhcmRzKClcclxuXHJcbmZ1bmN0aW9uIGhpZGRlbkNhcmRzICgpIHtcclxuICBsZXQgaGlkZGVuQ2FyZHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjYXJkJylcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IGhpZGRlbkNhcmRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBoaWRkZW5DYXJkc1tpXS5jbGFzc0xpc3QuYWRkKCdjYXJkLS1oaWRkZW4nKVxyXG4gICAgaGlkZGVuQ2FyZHNbaV0uc2V0QXR0cmlidXRlKCdpZCcsICdjYXJkJyArIGkpXHJcbiAgICBoaWRkZW5DYXJkc1tpXS5kYXRhc2V0LmNsaWNrZWQgPSBmYWxzZVxyXG4gIH1cclxufVxyXG5cclxud2luZG93LnNldFRpbWVvdXQoaGlkZGVuQ2FyZHMsIDEwMDApXHJcblxyXG5sZXQgY2xpY2tlZENhcmRzID0gMFxyXG5sZXQgcHJldml1c1xyXG5sZXQgY3VycmVudFxyXG5sZXQgc2NvcmUgPSAwXHJcbmZ1bmN0aW9uIHNob3dDYXJkIChlbGVtZW50KSB7XHJcbiAgaWYgKGNsaWNrZWRDYXJkcyA9PT0gMikge1xyXG4gICAgcmV0dXJuIHRydWVcclxuICB9XHJcbiAgbGV0IGN1cnJlbnRFbGUgPSBlbGVtZW50LnRhcmdldFxyXG4gIGxldCBjdXJyZW50Q2FyZCA9IGN1cnJlbnRFbGUuY2hpbGROb2Rlc1xyXG4gIGlmIChjdXJyZW50RWxlLmdldEF0dHJpYnV0ZSgnZGF0YS1jbGlja2VkJykpIHtcclxuICAgIGFsZXJ0KCd5b3UgbmVlZCBvdGhlciBjYXJkJylcclxuICB9XHJcbiAgaWYgKGN1cnJlbnRDYXJkWzBdICE9PSB1bmRlZmluZWQpIHtcclxuICAgIGN1cnJlbnRDYXJkWzBdLmNsYXNzTGlzdC5yZW1vdmUoJ2NhcmQtLWhpZGRlbicpICAgIFxyXG4gICAgY3VycmVudENhcmRbMF0uZGF0YXNldC5jbGlja2VkID0gdHJ1ZVxyXG4gICAgY2xpY2tlZENhcmRzKytcclxuICAgIHByZXZpdXMgPSBjdXJyZW50XHJcbiAgICBjdXJyZW50ID0gY3VycmVudENhcmRbMF0uc3JjXHJcbiAgfVxyXG4gIGlmIChwcmV2aXVzID09PSBjdXJyZW50KSB7XHJcbiAgICBzY29yZSA9KyAxMDAgXHJcbiAgICBjb25zb2xlLmxvZyhzY29yZSlcclxuICB9IGVsc2UgaWYgKHByZXZpdXMgIT09IGN1cnJlbnQgJiYgY2xpY2tlZENhcmRzID09PSAyKSB7XHJcbiAgICB3aW5kb3cuc2V0VGltZW91dChoaWRkZW5DYXJkcywgMTAwMClcclxuICAgIGNsaWNrZWRDYXJkcyA9IDBcclxuICB9XHJcbn1cclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2hvd0NhcmQpXHJcbiJdfQ==
